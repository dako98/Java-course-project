/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package app;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import java.util.*;
import javax.swing.*;
import javax.swing.table.*;

/**
 *
 * @author dako
 */
public class AddStock extends javax.swing.JFrame {

    public DefaultListModel list = new DefaultListModel();
    public Connect query = new Connect();
    
    private int selectedType;
    private int selectedItem;
    private int selectedTypeNew;
    /** Creates new form AddStock */
    public AddStock() {
        initComponents();
        
        initialiseTypeList();
        initialiseRemoveList();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnDone = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        cmbxTypeList = new javax.swing.JComboBox<>();
        cmbxItemList = new javax.swing.JComboBox<>();
        txtQuantity = new javax.swing.JTextField();
        btnAddStock = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnAddItem = new javax.swing.JButton();
        txtNewItemName = new javax.swing.JTextField();
        cmbxTypeListNew = new javax.swing.JComboBox<>();
        txtNewQuantity = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        cmbxRemoveItem = new javax.swing.JComboBox<>();
        btnRemoveItem = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        cmbxTypeList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbxTypeListMouseClicked(evt);
            }
        });
        cmbxTypeList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbxTypeListActionPerformed(evt);
            }
        });

        cmbxItemList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbxItemListActionPerformed(evt);
            }
        });

        btnAddStock.setText("Add quantity");
        btnAddStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddStockActionPerformed(evt);
            }
        });

        jLabel5.setText("Type");

        jLabel6.setText("Name");

        jLabel7.setText("Quantity");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbxTypeList, 0, 242, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbxItemList, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddStock))
                    .addComponent(jLabel7))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbxTypeList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbxItemList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddStock))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Add existing stock", jPanel2);

        btnAddItem.setText("Add new item");
        btnAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemActionPerformed(evt);
            }
        });

        cmbxTypeListNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbxTypeListNewActionPerformed(evt);
            }
        });

        jLabel1.setText("Type");

        jLabel2.setText("Name");

        jLabel3.setText("Price");

        jLabel4.setText("Quantity");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbxTypeListNew, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 135, Short.MAX_VALUE))
                    .addComponent(txtNewItemName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNewQuantity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddItem)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddItem))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbxTypeListNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNewItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNewQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Add new item", jPanel3);

        btnRemoveItem.setText("Remove");
        btnRemoveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveItemActionPerformed(evt);
            }
        });

        jLabel8.setText("Item");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cmbxRemoveItem, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemoveItem))
                    .addComponent(jLabel8))
                .addContainerGap(304, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbxRemoveItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoveItem))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Remove item", jPanel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnDone))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDone))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        // TODO add your handling code here:
        MainWindow panel = new MainWindow();
        panel.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnDoneActionPerformed

    private void cmbxTypeListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbxTypeListMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbxTypeListMouseClicked

    private void cmbxTypeListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbxTypeListActionPerformed
        // TODO add your handling code here:
        
        selectedType = Integer.valueOf(String.valueOf(cmbxTypeList.getSelectedItem()).split(" ")[0]);
        populateItemsList();
    }//GEN-LAST:event_cmbxTypeListActionPerformed

    private void btnAddStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddStockActionPerformed
        // TODO add your handling code here:
        float quantity = -1;
        
        if (cmbxItemList.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(this, "No item selected.", "Invalid input", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            quantity = Float.parseFloat(txtQuantity.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid real number.", "Invalid input", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Check is packaged good is a whole number
        if (cmbxTypeList.getSelectedItem().toString().split(" ")[0].equals("3")
                && quantity!=Math.floor(quantity)) {
            JOptionPane.showMessageDialog(this, "Packaged goods can only be restocked in whole.", "Invalid input", JOptionPane.ERROR_MESSAGE);
            return;
        }
                
        if (quantity <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a positive quantity.", "Invalid input", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String[] columns = {"Id", "Available units"};
        

        ArrayList<String> data = new ArrayList<String>();
        
        data = query.selectWhere(columns, 
                                new int[] {0},
                                new String[] {String.valueOf(selectedItem)},
                                "Items");
        
        float currentQuantity = Float.valueOf(data.get(0).split("---")[1]);
        
        String[] values = {String.valueOf(selectedItem),
                           String.valueOf(currentQuantity+quantity)};
        
        query.update(columns, values, "Id", String.valueOf(selectedItem), "Items");
        JOptionPane.showMessageDialog(this, "Stock successfully added.", "Success", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_btnAddStockActionPerformed

    private void cmbxItemListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbxItemListActionPerformed
        // TODO add your handling code here:
            
        if (cmbxItemList.getSelectedIndex()>0) {
        selectedItem = Integer.valueOf(String.valueOf(cmbxItemList.getSelectedItem()).split(" ")[0]);
        System.out.println("Selected item: " + selectedItem);
        }
    }//GEN-LAST:event_cmbxItemListActionPerformed

    private void cmbxTypeListNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbxTypeListNewActionPerformed
        // TODO add your handling code here:
        selectedTypeNew = Integer.valueOf(String.valueOf(cmbxTypeListNew.getSelectedItem()).split(" ")[0]);
        System.out.println("Selected type of new item: " + selectedTypeNew);
    }//GEN-LAST:event_cmbxTypeListNewActionPerformed

    private void btnAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemActionPerformed
        // TODO add your handling code here:
        String newItemName = txtNewItemName.getText();
        if (newItemName.equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter a valid name.", "Invalid input", JOptionPane.ERROR_MESSAGE);
            return;
        }
                
        float quantity = -1;
        float price = -1;   
        
        try {
            price = Float.parseFloat(txtPrice.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid real number for price.", "Invalid input", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            quantity = Float.parseFloat(txtNewQuantity.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid real number for quantity.", "Invalid input", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Check if packaged god is a whole number.
        if (cmbxTypeListNew.getSelectedItem().toString().split(" ")[0].equals("3")
                && quantity!=Math.floor(quantity)) {
            JOptionPane.showMessageDialog(this, "Packaged goods can only be added in whole.", "Invalid input", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
          if (price <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a non-negative number for price.", "Invalid input", JOptionPane.ERROR_MESSAGE);
            return;
        }
          
        if (quantity < 0) {
            JOptionPane.showMessageDialog(this, "Please enter a non-negative number for quantity.", "Invalid input", JOptionPane.ERROR_MESSAGE);
            return;
        }
      
        String[] columns = {"Name", "Price per unit", "Available units", "Type"};
        String[] values = {newItemName,
                           String.valueOf(price),
                           String.valueOf(quantity),
                           String.valueOf(cmbxTypeListNew.getSelectedItem()).split(" ")[0]
                           };

        ArrayList<String> data = new ArrayList<String>();
        
        data = query.selectWhere(columns, 
                                new int[] {0},
                                new String[] {String.valueOf(newItemName)},
                                "Items");
        if (data.size() <= 0)
        {
            query.insert(columns, values, "Items");
            JOptionPane.showMessageDialog(this, "Item succesfully added.", "Success", JOptionPane.INFORMATION_MESSAGE);

            // Update UI
            initialiseRemoveList();
            populateItemsList();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Item already exists.", "Duplicate item", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddItemActionPerformed

    private void btnRemoveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveItemActionPerformed
        // TODO add your handling code here:
        int id = -1;
        
        if (cmbxRemoveItem.getItemCount() <= 0) {
            return;
        }
        
        try {
            id = Integer.valueOf(String.valueOf(cmbxRemoveItem.getSelectedItem()).split(" ")[0]);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error removing item", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        query.delete("Id", id, "Items");
        initialiseRemoveList();
        populateItemsList();
    }//GEN-LAST:event_btnRemoveItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddStock().setVisible(true);
            }
        });
    }
    public void initialiseTypeList(){

        ArrayList<String> data = new ArrayList<String>();
        String[] columns = {"Id", "Name"};
        data = query.select(columns, "Type");
        for (int i = 0; i < data.size(); i++) {
            String[] row = data.get(i).split("---");
            cmbxTypeList.addItem(row[0] + " " + row[1]);
            cmbxTypeListNew.addItem(row[0] + " " + row[1]);
        }
        if(data.size() <= 0) 
            selectedType = 0;   // No categories exist.
        else
            selectedType = Integer.valueOf(data.get(0).split("---")[0]);
    }
    
    public void populateItemsList(){


        cmbxItemList.removeAllItems();
        ArrayList<String> data = new ArrayList<String>();
        String[] columns = {"Id", "Name", "Type"};
        data = query.selectWhere(columns, new int[] {2}, new String[] {String.valueOf(selectedType)},  "Items");
        for (int i = 0; i < data.size(); i++) {
            String[] row = data.get(i).split("---");
            cmbxItemList.addItem(row[0] + " " + row[1]);
        }
        
        if(data.size() <= 0) 
            selectedItem = 0;   // No items exist.
        else
            selectedItem = Integer.valueOf(data.get(0).split("---")[0]);
    }
    
    public void initialiseRemoveList(){

        cmbxRemoveItem.removeAllItems();
        ArrayList<String> data = new ArrayList<String>();
        String[] columns = {"Id", "Name"};
        data = query.select(columns, "Items");
        for (int i = 0; i < data.size(); i++) {
            String[] row = data.get(i).split("---");
            cmbxRemoveItem.addItem(row[0] + " " + row[1]);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddItem;
    private javax.swing.JButton btnAddStock;
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnRemoveItem;
    private javax.swing.JComboBox<String> cmbxItemList;
    private javax.swing.JComboBox<String> cmbxRemoveItem;
    private javax.swing.JComboBox<String> cmbxTypeList;
    private javax.swing.JComboBox<String> cmbxTypeListNew;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField txtNewItemName;
    private javax.swing.JTextField txtNewQuantity;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables

}
