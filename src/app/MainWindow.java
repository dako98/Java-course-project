/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import java.util.*;
import javax.swing.*;
import javax.swing.table.*;

/**
 *
 * @author dako
 */
public class MainWindow extends javax.swing.JFrame {

    public DefaultTableModel t;
    public Connect query = new Connect();
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        
        t = (DefaultTableModel) jTable1.getModel();
        tableSelect();
        comboBoxSelect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        btnOrder = new javax.swing.JButton();
        txtQuantity = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbFilter = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuAddStock = new javax.swing.JMenu();
        mnuReport = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Price per kg/pack.", "Availability in kg/pack.", "Type", "Id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        TableColumnModel tcm = jTable1.getColumnModel();
        tcm.removeColumn( tcm.getColumn(3) );
        tcm.removeColumn( tcm.getColumn(3) );

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        btnOrder.setText("Sell");
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });

        txtQuantity.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtQuantity.setText("1");

        jLabel1.setText("Search name");

        jLabel2.setText("Quantity");

        jLabel3.setText("Items in stock");

        cmbFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFilterActionPerformed(evt);
            }
        });

        jLabel4.setText("Filter");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)))
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(btnOrder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mnuAddStock.setText("Add stock");
        mnuAddStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnuAddStockMouseClicked(evt);
            }
        });
        mnuAddStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAddStockActionPerformed(evt);
            }
        });
        jMenuBar1.add(mnuAddStock);

        mnuReport.setText("Report");
        mnuReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnuReportMouseClicked(evt);
            }
        });
        jMenuBar1.add(mnuReport);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        // TODO add your handling code here:

        // Get type ID
        int type = cmbFilter.getSelectedIndex();
        
        // Get quantity
        float quantity = -1;
        try {
            quantity = Float.valueOf(txtQuantity.getText());            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid real number", "Invalid input", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (quantity <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a positive number", "Invalid input", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int selectedIndex = jTable1.getSelectedRow();
        
        if (selectedIndex < 0)
        {
            JOptionPane.showMessageDialog(this, "No item selected", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (t.getValueAt(selectedIndex, 3).equals("3") && quantity!=Math.floor(quantity)) {
            JOptionPane.showMessageDialog(this, "Packaged goods can only be bought in whole.", "Invalid input", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Quantity in stock
        float availableQty = Float.valueOf(String.valueOf(t.getValueAt(selectedIndex,2)));
        
        // Price per unit
        float price = Float.valueOf(String.valueOf(t.getValueAt(selectedIndex,1)));
        
        // Item Id
        int id = Integer.valueOf(String.valueOf(t.getValueAt(selectedIndex,4)));
 
        System.out.println(availableQty);
        
        if (availableQty - quantity < 0)
        {
            JOptionPane.showMessageDialog(this, "Not enough in stock.", "Out of stock", JOptionPane.ERROR_MESSAGE);
            return;
        }
        else
        {
            float newQuantity = availableQty - quantity;
            String[] columns = {"Available units"};
            String[] values = {String.valueOf(newQuantity)};
        
        // Update quantity in database table Items
        query.update(columns, values, "Id", String.valueOf(id), "Items");
        
        // Refresh UI
        cmbFilterActionPerformed(null);
        
        // Add entry in table Orders
        columns = new String[]{"Item Id", "Quantity", "Total"};
        values = new String[]{String.valueOf(id),
                              String.valueOf(quantity),
                              String.valueOf(price*quantity)};
        
        query.insert(columns, values, "Orders");
        }
    }//GEN-LAST:event_btnOrderActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        String text = jTextField1.getText();
        if (text.equals("")) 
        {
//            tableSelect();
            cmbFilterActionPerformed(null);
            return;
        }
                String table;

        int type = cmbFilter.getSelectedIndex();
        
        t.setRowCount(0);
        ArrayList<String> data = new ArrayList<String>();
        String[] columns = {"Name", "Price per unit", "Available units", "Type", "Id"};
        
        // If no type is selected, list all items
        if (type < 1)
            data = query.selectWhere(columns, new int[] {0}, new String[] {text}, "Items");
        else     
            data = query.selectWhere(columns, new int[] {0,3}, new String[] {text, String.valueOf(type)}, "Items");
        
        for (int i = 0; i < data.size(); i++) {
            String[] row = data.get(i).split("---");
            t.addRow(new Object[]{
               row[0],               
               row[1], 
               row[2],
               row[3],
               row[4]
            });
        }
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void mnuAddStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAddStockActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_mnuAddStockActionPerformed

    private void mnuAddStockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuAddStockMouseClicked
        // TODO add your handling code here:
        AddStock form = new AddStock();
        form.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_mnuAddStockMouseClicked

    private void cmbFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFilterActionPerformed
        // TODO add your handling code here:
        int index = cmbFilter.getSelectedIndex();
        if(index < 1)
        {
            tableSelect();
            return;
        }
        
        t.setRowCount(0);
        ArrayList<String> data = new ArrayList<String>();
        String[] columns = {"Name", "Price per unit", "Available units", "Type", "Id"};

        data = query.selectWhere(columns, new int[] {3}, new String[] {String.valueOf(index)}, "Items");
        for (int i = 0; i < data.size(); i++) {
            String[] row = data.get(i).split("---");
            t.addRow(new Object[]{
               row[0],               
               row[1], 
               row[2],
               row[3],
               row[4]
            });
        }
    }//GEN-LAST:event_cmbFilterActionPerformed

    private void mnuReportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuReportMouseClicked
        // TODO add your handling code here:
        Report panel = new Report();
        panel.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_mnuReportMouseClicked

        public void tableSelect(){
        t.setRowCount(0);
        ArrayList<String> data = new ArrayList<String>();
        String[] columns = {"Name", "Price per unit", "Available units","Type", "Id"};

        data = query.select(columns, "Items");
        for (int i = 0; i < data.size(); i++) {
            String[] row = data.get(i).split("---");
            t.addRow(new Object[]{
               row[0],               
               row[1], 
               row[2],
               row[3],
               row[4]
            });
        }
    }

    public void comboBoxSelect(){
        cmbFilter.addItem("");
        ArrayList<String> data = new ArrayList<String>();
        String[] columns = {"Id", "Name"};
        data = query.select(columns, "Type");
        for (int i = 0; i < data.size(); i++) {
            String[] row = data.get(i).split("---");
            cmbFilter.addItem(row[0] + " " + row[1]);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOrder;
    private javax.swing.JComboBox<String> cmbFilter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JMenu mnuAddStock;
    private javax.swing.JMenu mnuReport;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
